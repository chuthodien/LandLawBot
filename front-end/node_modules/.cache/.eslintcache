[{"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\index.tsx":"1","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\serviceWorker.ts":"2","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\App.tsx":"3","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\theme.ts":"4","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\contexts\\Auth.tsx":"5","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\templates\\InitUserWrapper.tsx":"6","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\contexts\\AuthProvider.tsx":"7","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\pages\\AllCharacters.tsx":"8","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\pages\\callScreen\\CallScreen.tsx":"9","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\pages\\loginPage\\CallBackPage.tsx":"10","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\pages\\loginPage\\LoginPage.tsx":"11","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\templates\\MenuAppBar.tsx":"12","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\utils\\util.ts":"13","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\pages\\modal\\ModalCreateAiagent.tsx":"14","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\pages\\modal\\ModalEditAiagent.tsx":"15","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\service\\api\\api.ts":"16","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\components\\Conversation.tsx":"17","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\components\\Flex\\Flex.tsx":"18","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\service\\api\\loginAPI.tsx":"19","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\components\\TableCommon\\TableCommon.tsx":"20","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\utils\\notify.ts":"21","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\service\\token.tsx":"22","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\components\\useConversation.ts":"23","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\components\\Modal\\ModalNotification.tsx":"24","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\components\\Modal\\ModalCommon.tsx":"25","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\components\\Loading\\Loading.tsx":"26","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\utils.ts":"27","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\index.tsx":"28","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\serviceWorker.ts":"29","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\App.tsx":"30","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\theme.ts":"31","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\contexts\\AuthProvider.tsx":"32","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\contexts\\Auth.tsx":"33","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\pages\\AllCharacters.tsx":"34","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\templates\\InitUserWrapper.tsx":"35","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\pages\\loginPage\\CallBackPage.tsx":"36","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\pages\\loginPage\\LoginPage.tsx":"37","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\pages\\callScreen\\CallScreen.tsx":"38","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\templates\\MenuAppBar.tsx":"39","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\utils\\util.ts":"40","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\components\\Conversation.tsx":"41","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\pages\\modal\\ModalCreateAiagent.tsx":"42","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\service\\api\\api.ts":"43","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\pages\\modal\\ModalEditAiagent.tsx":"44","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\service\\api\\loginAPI.tsx":"45","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\components\\Flex\\Flex.tsx":"46","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\components\\TableCommon\\TableCommon.tsx":"47","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\components\\useConversation.ts":"48","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\utils\\notify.ts":"49","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\service\\token.tsx":"50","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\components\\Modal\\ModalNotification.tsx":"51","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\components\\Modal\\ModalCommon.tsx":"52","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\components\\Loading\\Loading.tsx":"53","D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\utils.ts":"54"},{"size":670,"mtime":1685073130527,"results":"55","hashOfConfig":"56"},{"size":5417,"mtime":1685073130533,"results":"57","hashOfConfig":"56"},{"size":3049,"mtime":1685073130517,"results":"58","hashOfConfig":"56"},{"size":274,"mtime":1685073029154,"results":"59","hashOfConfig":"56"},{"size":811,"mtime":1685073130526,"results":"60","hashOfConfig":"56"},{"size":835,"mtime":1685073130533,"results":"61","hashOfConfig":"56"},{"size":1002,"mtime":1685073130527,"results":"62","hashOfConfig":"56"},{"size":11869,"mtime":1685073130528,"results":"63","hashOfConfig":"56"},{"size":163,"mtime":1685073130529,"results":"64","hashOfConfig":"56"},{"size":1670,"mtime":1685073130529,"results":"65","hashOfConfig":"56"},{"size":573,"mtime":1685073130530,"results":"66","hashOfConfig":"56"},{"size":2779,"mtime":1685073130533,"results":"67","hashOfConfig":"56"},{"size":141,"mtime":1685073130537,"results":"68","hashOfConfig":"56"},{"size":13024,"mtime":1685073130530,"results":"69","hashOfConfig":"56"},{"size":16855,"mtime":1685073130531,"results":"70","hashOfConfig":"56"},{"size":3558,"mtime":1685073130532,"results":"71","hashOfConfig":"56"},{"size":7228,"mtime":1685073130525,"results":"72","hashOfConfig":"56"},{"size":330,"mtime":1685073029146,"results":"73","hashOfConfig":"56"},{"size":364,"mtime":1685073130532,"results":"74","hashOfConfig":"56"},{"size":2485,"mtime":1685073130526,"results":"75","hashOfConfig":"56"},{"size":588,"mtime":1685073130537,"results":"76","hashOfConfig":"56"},{"size":600,"mtime":1685073130532,"results":"77","hashOfConfig":"56"},{"size":8883,"mtime":1685073130526,"results":"78","hashOfConfig":"56"},{"size":1527,"mtime":1685073130525,"results":"79","hashOfConfig":"56"},{"size":3663,"mtime":1685073130525,"results":"80","hashOfConfig":"56"},{"size":588,"mtime":1685073029147,"results":"81","hashOfConfig":"56"},{"size":772,"mtime":1685073130536,"results":"82","hashOfConfig":"56"},{"size":670,"mtime":1685073130527,"results":"83","hashOfConfig":"84"},{"size":5417,"mtime":1685073130533,"results":"85","hashOfConfig":"84"},{"size":3049,"mtime":1685073130517,"results":"86","hashOfConfig":"84"},{"size":274,"mtime":1685073029154,"results":"87","hashOfConfig":"84"},{"size":1002,"mtime":1685073130527,"results":"88","hashOfConfig":"84"},{"size":811,"mtime":1685073130526,"results":"89","hashOfConfig":"84"},{"size":11869,"mtime":1685073130528,"results":"90","hashOfConfig":"84"},{"size":835,"mtime":1685073130533,"results":"91","hashOfConfig":"84"},{"size":1670,"mtime":1685073130529,"results":"92","hashOfConfig":"84"},{"size":573,"mtime":1685073130530,"results":"93","hashOfConfig":"84"},{"size":163,"mtime":1685073130529,"results":"94","hashOfConfig":"84"},{"size":2779,"mtime":1685073130533,"results":"95","hashOfConfig":"84"},{"size":141,"mtime":1685073130537,"results":"96","hashOfConfig":"84"},{"size":7228,"mtime":1685073130525,"results":"97","hashOfConfig":"84"},{"size":13024,"mtime":1685073130530,"results":"98","hashOfConfig":"84"},{"size":3558,"mtime":1685073130532,"results":"99","hashOfConfig":"84"},{"size":16855,"mtime":1685073130531,"results":"100","hashOfConfig":"84"},{"size":364,"mtime":1685073130532,"results":"101","hashOfConfig":"84"},{"size":330,"mtime":1685073029146,"results":"102","hashOfConfig":"84"},{"size":2485,"mtime":1685073130526,"results":"103","hashOfConfig":"84"},{"size":8883,"mtime":1685073130526,"results":"104","hashOfConfig":"84"},{"size":588,"mtime":1685073130537,"results":"105","hashOfConfig":"84"},{"size":600,"mtime":1685073130532,"results":"106","hashOfConfig":"84"},{"size":1527,"mtime":1685073130525,"results":"107","hashOfConfig":"84"},{"size":3663,"mtime":1685073130525,"results":"108","hashOfConfig":"84"},{"size":588,"mtime":1685073029147,"results":"109","hashOfConfig":"84"},{"size":772,"mtime":1685073130536,"results":"110","hashOfConfig":"84"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kqxvn8",{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13ymxfu",{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","suppressedMessages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"217"},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","suppressedMessages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"217"},{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"217"},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\index.tsx",[],[],"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\serviceWorker.ts",[],[],"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\App.tsx",["281","282"],[],"import { CircularProgress, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./App.css\";\r\nimport { AuthContext } from \"./contexts/Auth\";\r\nimport AuthProvider from \"./contexts/AuthProvider\";\r\nimport InitUserWrapper from \"./templates/InitUserWrapper\";\r\n\r\nconst AllCharacterPage = React.lazy(() => import(\"./pages/AllCharacters\"));\r\nconst LoginPage = React.lazy(() => import(\"./pages/loginPage/LoginPage\"));\r\nconst CallBackPage = React.lazy(\r\n  () => import(\"./pages/loginPage/CallBackPage\")\r\n);\r\nconst CallScreenPage = React.lazy(\r\n  () => import(\"./pages/callScreen/CallScreen\")\r\n);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapperLoading: {\r\n    minHeight: \"100vh\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <div className=\"App\">\r\n        <ToastContainer theme=\"light\" />\r\n        <React.Suspense\r\n          fallback={\r\n            <div className={classes.wrapperLoading}>\r\n              <CircularProgress />\r\n            </div>\r\n          }\r\n        >\r\n          <BrowserRouter>\r\n            <AuthProvider>\r\n              <AuthContext.Consumer>\r\n                {({ user }) =>\r\n                  !user?.access_token ? (\r\n                    <>\r\n                      {/* <Route\r\n                        path=\"/api/line/callback\"\r\n                        render={() => <CallBackPage />}\r\n                      ></Route>\r\n                      <Route path=\"/login\" render={() => <LoginPage />}></Route>\r\n                      <Route exact path=\"/\">\r\n                        <Redirect to=\"/login\" />\r\n                      </Route> */}\r\n\r\n                      <Route\r\n                        path=\"/app/call\"\r\n                        render={() => <CallScreenPage />}\r\n                      ></Route>\r\n\r\n                    </>\r\n                  ) : (\r\n                    <InitUserWrapper>\r\n                      <Switch>\r\n                        <Route\r\n                          path=\"/call/agent/:idAgent\"\r\n                          render={() => <CallScreenPage />}\r\n                        ></Route>\r\n                        <Route\r\n                          path=\"/profile/:id\"\r\n                          exact\r\n                          render={() => <AllCharacterPage />}\r\n                        ></Route>\r\n                        <Route\r\n                          path=\"/login\"\r\n                          exact\r\n                          render={() => <LoginPage />}\r\n                        ></Route>\r\n                      </Switch>\r\n                    </InitUserWrapper>\r\n                  )\r\n                }\r\n              </AuthContext.Consumer>\r\n            </AuthProvider>\r\n          </BrowserRouter>\r\n        </React.Suspense>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\theme.ts",[],[],"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\contexts\\Auth.tsx",[],[],"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\templates\\InitUserWrapper.tsx",[],[],"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\contexts\\AuthProvider.tsx",[],[],"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\pages\\AllCharacters.tsx",["283","284","285","286","287","288","289","290","291"],[],"import {\r\n  Box,\r\n  Button,\r\n  Paper,\r\n  TableCell,\r\n  TableRow,\r\n  Theme,\r\n  Typography,\r\n  createStyles,\r\n  makeStyles,\r\n  withStyles\r\n} from '@material-ui/core';\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport { getAgentsByUserId } from \"service/api/api\";\r\nimport axios from 'axios';\r\nimport clsx from 'clsx';\r\nimport Flex from 'components/Flex/Flex';\r\nimport TableCommon from 'components/TableCommon/TableCommon';\r\nimport { useAuth } from 'contexts/Auth';\r\nimport moment from \"moment\";\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DATE_FORMAT, EDIT_AGENT_TYPE } from \"utils/util\";\r\nimport ModalCreateAiagent from './modal/ModalCreateAiagent';\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { theme } from \"theme\";\r\nimport ModalEditAgent, { AiAgentEdit } from './modal/ModalEditAiagent';\r\n\r\nexport type sampleDialog = {\r\n  id: number;\r\n  agent_id: number;\r\n  content: string\r\n}\r\n\r\nexport type sampleVoice = {\r\n  id: number;\r\n  agent_id: number;\r\n  file: string | File;\r\n  type?: string;\r\n};\r\n\r\nexport type aiAgents = {\r\n  id: number;\r\n  user_id: number;\r\n  name: string;\r\n  introduction: string;\r\n  created_at: string;\r\n  pdf_file: string;\r\n  icon_file: string;\r\n  voice_model_file: string;\r\n  pinecone_namespace: string;\r\n  age: string;\r\n  first_person_pronoun: string;\r\n  second_person_pronoun: string;\r\n  activity: string;\r\n  hobbies: string;\r\n  occupation: string;\r\n  speaking_style: string;\r\n\r\n  sample_dialog: sampleDialog[];\r\n  sample_voice: sampleVoice[];\r\n};\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    head: {\r\n      backgroundColor: '#121617',\r\n      borderBottom: 'none',\r\n      color: '#cccccc',\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }),\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      color: \"#999999\",\r\n      \"&:nth-of-type(odd)\": {\r\n        backgroundColor: \"#1c1c21\",\r\n        position: \"relative\",\r\n        \"&:hover\": {\r\n          cursor: \"pointer\",\r\n          opacity: 0.9,\r\n        },\r\n      },\r\n      \"&:nth-of-type(even)\": {\r\n        backgroundColor: \"#111116\",\r\n        position: \"relative\",\r\n\r\n        \"&:hover\": {\r\n          cursor: \"pointer\",\r\n          opacity: 0.9,\r\n        },\r\n      },\r\n      \"& th, td\": {\r\n        color: \"#999999\",\r\n        borderBottom: \"none\",\r\n      },\r\n    },\r\n  })\r\n)(TableRow);\r\n\r\nconst useStyles = makeStyles((themes) => ({\r\n  container: {\r\n    padding: 50,\r\n  },\r\n  label: {\r\n    minWidth: 220,\r\n  },\r\n  paper: {\r\n    height: \"80vh\",\r\n    padding: 20,\r\n  },\r\n  margin: {\r\n    textAlign: \"left\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  table: {\r\n    height: \"70vh\",\r\n  },\r\n  divHover: {\r\n    position: \"absolute\",\r\n    left: \"2%\",\r\n  },\r\n  iconHover: {\r\n    cursor: \"pointer\",\r\n    width: \"20px\",\r\n    height: \"20px\",\r\n    color: \"white\",\r\n  },\r\n  icon: {\r\n    height: 40,\r\n    width: 40,\r\n    margin: \"0 auto\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    borderRadius: \"50%\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      opacity: \"0.7\",\r\n    },\r\n  },\r\n  iconEdit: {\r\n    marginTop: 8,\r\n    marginRight: 8,\r\n    backgroundColor: theme.palette.secondary.main,\r\n    border: `1px solid ${theme.palette.secondary.main}`,\r\n    \"&:hover\": {\r\n      opacity: \"0.9\",\r\n    },\r\n  },\r\n  startCall: {\r\n    marginTop: 8,\r\n    backgroundColor: \"limegreen\",\r\n    border: \"1px solid limegreen\",\r\n    \"&:hover\": {\r\n      opacity: \"0.9\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst AllCharacters = () => {\r\n  const classes = useStyles();\r\n  const { user } = useAuth();\r\n  const history = useHistory();\r\n  const [data, setData] = useState<aiAgents[]>([]);\r\n  const tableRef = useRef<any>(null);\r\n  const [openModalCreate, setOpenModalCreate] = useState(false);\r\n  const [openModalEdit, setOpenModalEdit] = useState(false);\r\n  const [selectedRow, setSelectedRow] = useState<AiAgentEdit>();\r\n  const [loading, setLoading] = useState(false);\r\n  const [pdfFile, setPdfFile] = useState(null);\r\n  const [voice, setVoiceFile] = useState(null);\r\n\r\n  const [showId, setShowId] = useState(0);\r\n  const [agent, setAgent] = useState<aiAgents>();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        setLoading(true);\r\n        const data = await getAgentsByUserId(user?.id as number);\r\n        setData(data || []);\r\n      } catch (error) {\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, [user?.id]);\r\n\r\n  const handleEditAgent = (agent: any) => {\r\n    if (!agent) return;\r\n    setSelectedRow(agent);\r\n    setOpenModalEdit(true);\r\n  };\r\n\r\n  const handleCallAgent = (agent: aiAgents) => {\r\n    if (!agent) return;\r\n\r\n    history.push(\r\n      { pathname: `/call/agent/${agent.id}`, state: agent },\r\n      \"_blank\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.container}>\r\n        <Paper className={classes.paper} elevation={2}>\r\n          <Flex alignItems=\"center\" justifyContent=\"space-between\" mb={2}>\r\n            <Typography variant=\"h4\" className={classes.margin}>\r\n              Ai agent management\r\n            </Typography>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ maxWidth: \"150px\" }}\r\n              onClick={() => setOpenModalCreate(true)}\r\n            >\r\n              Create\r\n            </Button>\r\n          </Flex>\r\n          <div className={classes.table}>\r\n            <TableCommon\r\n              tHeader={\r\n                <>\r\n                  <StyledTableCell style={{ width: \"5%\" }}>Id</StyledTableCell>\r\n                  <StyledTableCell style={{ width: \"15%\" }}>\r\n                    User id\r\n                  </StyledTableCell>\r\n                  <StyledTableCell style={{ width: \"15%\" }}>\r\n                    Name\r\n                  </StyledTableCell>\r\n                  <StyledTableCell style={{ width: \"20%\" }}>\r\n                    Introduction\r\n                  </StyledTableCell>\r\n                  <StyledTableCell style={{ width: \"20%\" }}>\r\n                    Date\r\n                  </StyledTableCell>\r\n                  <StyledTableCell style={{ width: \"20%\" }}>\r\n                    Pdf file\r\n                  </StyledTableCell>\r\n                  <StyledTableCell style={{ width: \"20%\" }}>\r\n                    Icon file\r\n                  </StyledTableCell>\r\n                  <StyledTableCell style={{ width: \"20%\" }}>\r\n                    Voice model file\r\n                  </StyledTableCell>\r\n                  <StyledTableCell style={{ width: \"20%\" }}>\r\n                    Pinecone namespace\r\n                  </StyledTableCell>\r\n                  <StyledTableCell style={{ width: \"20%\" }}>\r\n                    Age\r\n                  </StyledTableCell>\r\n                  <StyledTableCell style={{ width: \"20%\" }}>\r\n                    First person pronoun\r\n                  </StyledTableCell>\r\n                  <StyledTableCell style={{ width: \"20%\" }}>\r\n                    Second person pronoun\r\n                  </StyledTableCell>\r\n                  <StyledTableCell style={{ width: \"20%\" }}>\r\n                    Activity\r\n                  </StyledTableCell>\r\n                  <StyledTableCell style={{ width: \"20%\" }}>\r\n                    Hobbies\r\n                  </StyledTableCell>\r\n                  <StyledTableCell style={{ width: \"20%\" }}>\r\n                    Occupation\r\n                  </StyledTableCell>\r\n                  <StyledTableCell style={{ width: \"20%\" }}>\r\n                    Speaking style\r\n                  </StyledTableCell>\r\n                </>\r\n              }\r\n              tableRef={tableRef}\r\n              handleLoadMore={() => {}}\r\n              loading={false}\r\n              loadMore={false}\r\n            >\r\n              {data.map((row, idx) => (\r\n                <StyledTableRow\r\n                  key={idx}\r\n                  onClick={() => {\r\n                    // setOpenDetail(true);\r\n                    // setSelectedRow(row);\r\n                  }}\r\n                  onMouseEnter={() => {\r\n                    setShowId(row.id);\r\n                  }}\r\n                  onMouseLeave={() => setShowId(0)}\r\n                >\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.id}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.user_id}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.name}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.introduction}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row?.created_at\r\n                      ? moment(row?.created_at).format(DATE_FORMAT)\r\n                      : \"N/A\"}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.pdf_file}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.icon_file}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.voice_model_file}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.pinecone_namespace}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.age}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.first_person_pronoun}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.second_person_pronoun}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.activity}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.hobbies}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.occupation}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                    {row.speaking_style}\r\n                  </StyledTableCell>\r\n                  {row.id === showId && (\r\n                    <Flex className={classes.divHover}>\r\n                      <div\r\n                        className={clsx(classes.icon, classes.iconEdit)}\r\n                        onClick={() => {\r\n                          handleEditAgent(row);\r\n                        }}\r\n                      >\r\n                        <EditIcon className={classes.iconHover} />\r\n                      </div>\r\n                      <div\r\n                        className={clsx(classes.icon, classes.startCall)}\r\n                        onClick={() => {\r\n                          handleCallAgent(row);\r\n                        }}\r\n                      >\r\n                        <CallIcon className={classes.iconHover} />\r\n                      </div>\r\n                    </Flex>\r\n                  )}\r\n                </StyledTableRow>\r\n              ))}\r\n            </TableCommon>\r\n          </div>\r\n        </Paper>\r\n      </Box>\r\n      <ModalCreateAiagent\r\n        openDetail={openModalCreate}\r\n        setOpenDetail={setOpenModalCreate}\r\n      />\r\n      <ModalEditAgent\r\n        agent={selectedRow}\r\n        openDetail={openModalEdit}\r\n        setOpenDetail={setOpenModalEdit}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllCharacters;\r\n","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\pages\\callScreen\\CallScreen.tsx",[],[],"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\pages\\loginPage\\CallBackPage.tsx",[],[],"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\pages\\loginPage\\LoginPage.tsx",[],[],"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\templates\\MenuAppBar.tsx",[],[],"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\utils\\util.ts",[],[],"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\pages\\modal\\ModalCreateAiagent.tsx",["292"],[],"import {\r\n  FormControl,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport axios from 'axios';\r\nimport Flex from 'components/Flex/Flex';\r\nimport ModalCommon from 'components/Modal/ModalCommon';\r\nimport { useAuth } from 'contexts/Auth';\r\nimport React, { useState } from 'react';\r\nimport { getLocalAccessToken } from 'service/token';\r\nimport { notifyFail, notifySuccess } from 'utils/notify';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  container: {\r\n    padding: 100,\r\n  },\r\n  label: {\r\n    minWidth: 400,\r\n    textAlign: \"left\",\r\n  },\r\n  paper: {\r\n    padding: 20,\r\n  },\r\n  inputTxt: {\r\n    minWidth: 400,\r\n    marginRight: 20,\r\n    width: \"100%\",\r\n  },\r\n  form: {\r\n    // alignItems: 'center',\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  row: {\r\n    // marginRight: 20,\r\n  },\r\n  iconConversation: {\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      opacity: 0.7,\r\n    },\r\n  },\r\n}));\r\n\r\nexport const initAgent = {\r\n  name: \"\",\r\n  introduction: \"\",\r\n  age: \"\",\r\n  firstPersonPronoun: \"\",\r\n  secondPersonPronoun: \"\",\r\n  activity: \"\",\r\n  hobbies: \"\",\r\n  occupation: \"\",\r\n  speakingStyle: \"\",\r\n\r\n  iconFile: null,\r\n  pdfFile: null,\r\n  voice: [],\r\n  sampleDialogs: [{ content: \"\" }],\r\n};\r\n\r\nexport interface IAgentInfo {\r\n  name: string;\r\n  introduction: string;\r\n  age: string;\r\n  firstPersonPronoun: string;\r\n  secondPersonPronoun: string;\r\n  activity: string;\r\n  hobbies: string;\r\n  occupation: string;\r\n  speakingStyle: string;\r\n\r\n  iconFile: any;\r\n  pdfFile: any;\r\n  voice: any[];\r\n  sampleDialogs: { content: string }[];\r\n}\r\n\r\nconst ModalCreateAiagent = ({\r\n  openDetail,\r\n  setOpenDetail,\r\n}: {\r\n  openDetail: boolean,\r\n  setOpenDetail : (value: boolean) => void\r\n}) => {\r\n  const { user } = useAuth();\r\n  const classes = useStyles();\r\n  const [agent, setAgent] = useState<IAgentInfo>(initAgent);\r\n  const [loading, setLoading] = useState(false)\r\n  const token = getLocalAccessToken()\r\n\r\n  // sample dialog\r\n  function handleChange(i: number, event: any) {\r\n    const newValues = [...agent.sampleDialogs];\r\n    newValues[i].content = event.target.value;\r\n    setAgent((prev) => ({ ...prev, sampleDialogs: newValues }));\r\n  }\r\n\r\n  function handleAdd() {\r\n    const newValues = [...agent.sampleDialogs, { content: \"\" }];\r\n    setAgent((prev) => ({ ...prev, sampleDialogs: newValues }));\r\n  }\r\n\r\n  function handleRemove(i: number) {\r\n    const newValues = agent.sampleDialogs.filter((___, index) => index !== i);\r\n    setAgent((prev) => ({ ...prev, sampleDialogs: newValues }));\r\n  }\r\n\r\n  const handleSubmit = async() => {\r\n    setLoading(true)\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"user_id\", user?.id as any);\r\n    formData.append(\"name\", agent.name);\r\n    formData.append(\"introduction\", agent.introduction);\r\n    formData.append(\"pdf_file\", agent.pdfFile as any);\r\n    formData.append(\"icon_file\", agent.iconFile as any);\r\n    // formData.append(\"voice_model_file\", voice?.[0] as any);\r\n    formData.append(\"pinecone_namespace\", \"\" as any);\r\n    formData.append(\r\n      \"sample_dialogs\",\r\n      JSON.stringify(agent.sampleDialogs) as any\r\n    );\r\n    for (let i = 0; i < agent.voice.length; i++) {\r\n      formData.append(\"sample_voices\", agent.voice?.[i]);\r\n    }\r\n    formData.append(\"age\", agent.age as any);\r\n    formData.append(\"first_person_pronoun\", agent.firstPersonPronoun as any);\r\n    formData.append(\"second_person_pronoun\", agent.secondPersonPronoun as any);\r\n    formData.append(\"activity\", agent.activity as any);\r\n    formData.append(\"hobbies\", agent.hobbies as any);\r\n    formData.append(\"occupation\", agent.occupation as any);\r\n    formData.append(\"speaking_style\", agent.speakingStyle as any);\r\n\r\n    axios\r\n      .post(\r\n        `${process.env.REACT_APP_BASE_URL}/aiagents/create/${user?.id}`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            \"access-control-allow-origin\": \"*\",\r\n            \"ngrok-skip-browser-warning\": \"*\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        notifySuccess(\"Create agent successfully\");\r\n      })\r\n      .catch((error) => {\r\n        notifyFail(\"Create agent fail\");\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ModalCommon\r\n        open={openDetail}\r\n        setOpen={setOpenDetail}\r\n        title=\"Create Ai agent\"\r\n        handleCloseModal={() => {\r\n          setAgent(initAgent);\r\n        }}\r\n        handleConfirm={handleSubmit}\r\n      >\r\n        <form  className={classes.form}>\r\n          <Flex className={classes.row}>\r\n            <TextField\r\n              size=\"small\"\r\n              required\r\n              margin=\"normal\"\r\n              id=\"name\"\r\n              value={agent.name}\r\n              variant=\"outlined\"\r\n              label=\"Name\"\r\n              onChange={(e) =>\r\n                setAgent((prev) => ({ ...prev, name: e.target.value }))\r\n              }\r\n              className={classes.inputTxt}\r\n            />\r\n            <TextField\r\n              type=\"number\"\r\n              required\r\n              size=\"small\"\r\n              margin=\"normal\"\r\n              id=\"age\"\r\n              label=\"Age\"\r\n              value={agent.age}\r\n              variant=\"outlined\"\r\n              onChange={(e) =>\r\n                setAgent((prev) => ({ ...prev, age: e.target.value }))\r\n              }\r\n              className={classes.inputTxt}\r\n            />\r\n          </Flex>\r\n          <Flex>\r\n            <TextField\r\n              required\r\n              size=\"small\"\r\n              margin=\"normal\"\r\n              id=\"age\"\r\n              label=\"First person pronoun\"\r\n              value={agent.firstPersonPronoun}\r\n              variant=\"outlined\"\r\n              onChange={(e) =>\r\n                setAgent((prev) => ({\r\n                  ...prev,\r\n                  firstPersonPronoun: e.target.value,\r\n                }))\r\n              }\r\n              className={classes.inputTxt}\r\n            />\r\n            <TextField\r\n              required\r\n              size=\"small\"\r\n              margin=\"normal\"\r\n              id=\"age\"\r\n              label=\"Second person pronoun\"\r\n              value={agent.secondPersonPronoun}\r\n              variant=\"outlined\"\r\n              onChange={(e) =>\r\n                setAgent((prev) => ({\r\n                  ...prev,\r\n                  secondPersonPronoun: e.target.value,\r\n                }))\r\n              }\r\n              className={classes.inputTxt}\r\n            />\r\n          </Flex>\r\n          <Flex>\r\n            <TextField\r\n              required\r\n              size=\"small\"\r\n              margin=\"normal\"\r\n              id=\"age\"\r\n              label=\"Activity\"\r\n              value={agent.activity}\r\n              variant=\"outlined\"\r\n              onChange={(e) =>\r\n                setAgent((prev) => ({\r\n                  ...prev,\r\n                  activity: e.target.value,\r\n                }))\r\n              }\r\n              className={classes.inputTxt}\r\n            />\r\n            <TextField\r\n              required\r\n              size=\"small\"\r\n              margin=\"normal\"\r\n              id=\"age\"\r\n              label=\"Hobbies\"\r\n              value={agent.hobbies}\r\n              variant=\"outlined\"\r\n              onChange={(e) =>\r\n                setAgent((prev) => ({\r\n                  ...prev,\r\n                  hobbies: e.target.value,\r\n                }))\r\n              }\r\n              className={classes.inputTxt}\r\n            />\r\n          </Flex>\r\n          <Flex>\r\n            <TextField\r\n              required\r\n              size=\"small\"\r\n              margin=\"normal\"\r\n              id=\"age\"\r\n              label=\"Occupation\"\r\n              value={agent.occupation}\r\n              variant=\"outlined\"\r\n              onChange={(e) =>\r\n                setAgent((prev) => ({\r\n                  ...prev,\r\n                  occupation: e.target.value,\r\n                }))\r\n              }\r\n              className={classes.inputTxt}\r\n            />\r\n            <TextField\r\n              required\r\n              size=\"small\"\r\n              margin=\"normal\"\r\n              id=\"age\"\r\n              label=\"Speaking style\"\r\n              value={agent.speakingStyle}\r\n              variant=\"outlined\"\r\n              onChange={(e) =>\r\n                setAgent((prev) => ({\r\n                  ...prev,\r\n                  speakingStyle: e.target.value,\r\n                }))\r\n              }\r\n              className={classes.inputTxt}\r\n            />\r\n          </Flex>\r\n          <Flex>\r\n            <TextField\r\n              size=\"small\"\r\n              required\r\n              multiline\r\n              rows={4}\r\n              margin=\"normal\"\r\n              id=\"description\"\r\n              label=\"Introduction\"\r\n              value={agent.introduction}\r\n              variant=\"outlined\"\r\n              onChange={(e) =>\r\n                setAgent((prev) => ({\r\n                  ...prev,\r\n                  introduction: e.target.value,\r\n                }))\r\n              }\r\n              className={classes.inputTxt}\r\n            />\r\n          </Flex>\r\n          {agent.sampleDialogs.map((value, i) => (\r\n            <Flex>\r\n              <TextField\r\n                size=\"small\"\r\n                required\r\n                multiline\r\n                rows={2}\r\n                margin=\"normal\"\r\n                id=\"conversation\"\r\n                value={value.content}\r\n                variant=\"outlined\"\r\n                label=\"Conversation\"\r\n                onChange={(e) => handleChange(i, e)}\r\n                className={classes.inputTxt}\r\n                style={{ width: \"92%\" }}\r\n              />\r\n              {i === 0 && (\r\n                <div onClick={handleAdd} className={classes.iconConversation}>\r\n                  <AddIcon />\r\n                </div>\r\n              )}\r\n              {i > 0 && (\r\n                <div\r\n                  onClick={() => handleRemove(i)}\r\n                  className={classes.iconConversation}\r\n                >\r\n                  <RemoveIcon />\r\n                </div>\r\n              )}\r\n            </Flex>\r\n          ))}\r\n\r\n          <Flex flexDirection=\"column\" style={{ marginTop: 15 }}>\r\n            <Typography className={classes.label}>Icon file</Typography>\r\n            <FormControl margin=\"normal\">\r\n              {/* <label htmlFor=\"image_uploads\">Choose images to upload (PNG, JPG)</label> */}\r\n              {/* <InputLabel htmlFor=\"memoryFileLabel\"></InputLabel> */}\r\n              <input\r\n                type=\"file\"\r\n                id=\"image_uploads\"\r\n                accept=\".jpg,.fbx,.obj,.dae\"\r\n                name=\"image_uploads\"\r\n                onChange={(e) =>\r\n                  setAgent((prev) => ({\r\n                    ...prev,\r\n                    iconFile: e.target.files?.[0] as any,\r\n                  }))\r\n                }\r\n              />\r\n            </FormControl>\r\n          </Flex>\r\n\r\n          <Flex flexDirection=\"column\" style={{ marginTop: 15 }}>\r\n            <Typography className={classes.label}>PDF file</Typography>\r\n            <FormControl margin=\"normal\">\r\n              {/* <label htmlFor=\"image_uploads\">Choose images to upload (PNG, JPG)</label> */}\r\n              {/* <InputLabel htmlFor=\"memoryFileLabel\"></InputLabel> */}\r\n              <input\r\n                type=\"file\"\r\n                id=\"samplecoives\"\r\n                accept=\".pdf\"\r\n                name=\"samplecoives\"\r\n                onChange={(e) =>\r\n                  setAgent((prev) => ({\r\n                    ...prev,\r\n                    pdfFile: e.target.files?.[0] as any,\r\n                  }))\r\n                }\r\n              />\r\n            </FormControl>\r\n          </Flex>\r\n          \r\n          <Flex flexDirection=\"column\" style={{ marginTop: 15 }}>\r\n            <Typography className={classes.label}>Voice file</Typography>\r\n            <FormControl margin=\"normal\">\r\n              {/* <InputLabel id=\"voiceFileLabel\" htmlFor=\"voiceFileLabel\"></InputLabel> */}\r\n              <input\r\n                type=\"file\"\r\n                multiple\r\n                id=\"voiceFileLabel\"\r\n                accept=\"audio/*\"\r\n                name=\"voiceFileLabel\"\r\n                onChange={(e) =>\r\n                  setAgent((prev) => ({\r\n                    ...prev,\r\n                    voice: e.target.files as any,\r\n                  }))\r\n                }\r\n              />\r\n            </FormControl>\r\n          </Flex>\r\n\r\n          {/* <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ marginTop: 15, maxWidth: \"150px\", margin: \"0 auto\" }}\r\n          >\r\n            Submit\r\n          </Button> */}\r\n        </form>\r\n      </ModalCommon>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalCreateAiagent;\r\n","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\pages\\modal\\ModalEditAiagent.tsx",["293","294","295","296","297","298","299"],[],"import  AddIcon  from \"@material-ui/icons/Add\";\r\nimport  RemoveIcon  from \"@material-ui/icons/Remove\";\r\nimport { Button, Fab, FormControl, IconButton, InputLabel, TextField, Typography, makeStyles } from \"@material-ui/core\";\r\nimport Flex from \"components/Flex/Flex\";\r\nimport ModalCommon from \"components/Modal/ModalCommon\";\r\nimport { aiAgents, sampleVoice } from \"pages/AllCharacters\";\r\nimport { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { IAgentInfo, initAgent } from \"./ModalCreateAiagent\";\r\nimport { updateAgentAPI } from \"service/api/api\";\r\nimport axios from \"axios\";\r\nimport { notifyFail, notifySuccess } from \"utils/notify\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { EDIT_AGENT_TYPE } from \"utils/util\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\r\nimport { getLocalAccessToken } from \"service/token\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  row: {},\r\n  inputTxt: {\r\n    minWidth: 400,\r\n    marginRight: 20,\r\n    width: \"100%\",\r\n  },\r\n  label: {\r\n    // minWidth: 400,\r\n    textAlign: \"left\",\r\n    fontWeight: 700,\r\n  },\r\n  iconConversation: {\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      opacity: 0.7,\r\n    },\r\n  },\r\n  button:{\r\n    height: '36.5px',\r\n  },\r\n  input:{\r\n    // display: \"none\",\r\n    opacity: 0,\r\n    width: '24px',\r\n    transform: 'translateX(-24px)',\r\n    \"&:hover\": {\r\n      // opacity: 0,\r\n    }\r\n  }\r\n}));\r\n\r\nexport interface AiAgentEdit extends aiAgents {\r\n  iconFile: any;\r\n  pdfFile: any;\r\n  voiceFile: any;\r\n}\r\n\r\nconst ModalEditAgent = ({\r\n  openDetail,\r\n  setOpenDetail,\r\n  agent,\r\n}: {\r\n  openDetail: boolean;\r\n  setOpenDetail: (value: boolean) => void;\r\n  agent: AiAgentEdit | undefined;\r\n}) => {\r\n  const token = getLocalAccessToken();\r\n  const classes = useStyles();\r\n  const [aiAgent, setAgent] = useState(agent);\r\n  const [loadingEdit, setLoadingEdit] = useState(false);\r\n  const [sampleVoiceData, setSampleVoiceData] = useState<any[]>([]);\r\n\r\n\r\n  useEffect(() => {\r\n    setAgent(agent);\r\n  }, [agent]);\r\n\r\n  // NOTE: FUNCTION CONVERSATION\r\n  function handleChangeConversation(i: number, event: any) {\r\n    const newValues = [...(aiAgent?.sample_dialog || [])];\r\n    newValues[i].content = event.target.value;\r\n    setAgent((prev: any) => ({ ...prev, sample_dialog: newValues }));\r\n  }\r\n\r\n  function handleAddConversation() {\r\n    const newValues = [...(aiAgent?.sample_dialog || []), { content: \"\" }];\r\n    setAgent((prev: any) => ({ ...prev, sample_dialog: newValues }));\r\n  }\r\n\r\n  function handleRemoveConversation(i: number) {\r\n    const newValues = aiAgent?.sample_dialog.filter(\r\n      (___, index) => index !== i\r\n    );\r\n    setAgent((prev: any) => ({ ...prev, sample_dialog: newValues }));\r\n  }\r\n\r\n  // NOTE: FUNCTION VOICE FILE\r\n  function handleAddVoiceFile() {\r\n    const newValues = [\r\n      ...(aiAgent?.sample_voice || []),\r\n      { file: null, id: uuidv4(), type: EDIT_AGENT_TYPE.create },\r\n    ];\r\n    setAgent((prev: any) => ({\r\n      ...prev,\r\n      sample_voice: newValues,\r\n    }));\r\n  }\r\n\r\n  function handleRemoveVoiceFile(i: number, item: sampleVoice) {\r\n    const newValues = aiAgent?.sample_voice.filter((___, index) => index !== i);\r\n    setAgent((prev: any) => ({ ...prev, sample_voice: newValues }));\r\n\r\n    if(item.type === EDIT_AGENT_TYPE.create) {\r\n      const newValuesVoice = sampleVoiceData.filter((e, __) => e.id !== item.id)\r\n      setSampleVoiceData(newValuesVoice);\r\n    } else {\r\n      if (!sampleVoiceData.map(e => e.id).includes(item.id)) {\r\n        setSampleVoiceData((prev: any) => [...prev, ({id: item.id , type: EDIT_AGENT_TYPE.delete})])\r\n      } else {\r\n        const voiceExits = sampleVoiceData.find((e) => e.id === item.id);\r\n        if (voiceExits) voiceExits.type = EDIT_AGENT_TYPE.delete;\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleChangeVoiceFile(i: number, event: any, item: sampleVoice) {\r\n    const newValues = [...(aiAgent?.sample_voice || [])];\r\n    newValues[i].file = event.target.files?.[0];\r\n    setAgent((prev: any) => ({ ...prev, sample_voice: newValues }));\r\n\r\n\r\n    if (item?.type === EDIT_AGENT_TYPE.create) {\r\n      if (!sampleVoiceData.map((e) => e.id).includes(item.id)) {\r\n        setSampleVoiceData((prev: any) => [\r\n          ...prev,\r\n          {\r\n            id: item.id,\r\n            file: event.target.files?.[0],\r\n            type: EDIT_AGENT_TYPE.create,\r\n          },\r\n        ]);\r\n      } else {\r\n        const voiceExits = sampleVoiceData.find(e => e.id === item.id)\r\n        if(voiceExits) voiceExits.file = event.target.files?.[0];\r\n      }\r\n    } else {\r\n      if (!sampleVoiceData.map((e) => e.id).includes(item.id)) {\r\n        setSampleVoiceData((prev: any) => [\r\n          ...prev,\r\n          {\r\n            id: item?.id,\r\n            file: event.target.files?.[0],\r\n            type: EDIT_AGENT_TYPE.update,\r\n          },\r\n        ]);\r\n      } else {\r\n        const voiceExits = sampleVoiceData.find((e) => e.id === item.id);\r\n        if (voiceExits){\r\n          voiceExits.file = event.target.files?.[0];\r\n          voiceExits.type = EDIT_AGENT_TYPE.update;\r\n        } \r\n      }\r\n    }\r\n  }\r\n\r\n  const showBtnAddVoiceFile = useMemo(() => {\r\n    if(aiAgent?.sample_voice.some(e => !e.file && e.type === EDIT_AGENT_TYPE.create)) return true\r\n    return false\r\n  }, [aiAgent]);\r\n\r\n  const handleUpdateAgent = async () => {\r\n    setLoadingEdit(true);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"user_id\", aiAgent?.user_id as any);\r\n    formData.append(\"name\", aiAgent?.name as any);\r\n    formData.append(\"introduction\", aiAgent?.introduction as any);\r\n    formData.append(\"pdf_file\", aiAgent?.pdfFile as any);\r\n    formData.append(\"icon_file\", aiAgent?.iconFile as any);\r\n    // formData.append(\"voice_model_file\", voice?.[0] as any);\r\n    formData.append(\"pinecone_namespace\", \"\" as any);\r\n    formData.append(\r\n      \"sampledialogs\",\r\n      JSON.stringify(aiAgent?.sample_dialog) as any\r\n    );\r\n\r\n    formData.append(\r\n      \"sample_voices_info\",\r\n      JSON.stringify(sampleVoiceData.map(e => ({id: e.id, type: e.type}))) as any\r\n    );\r\n\r\n    for (let i = 0; i < sampleVoiceData?.length; i++) {\r\n      sampleVoiceData[i]?.file &&  formData.append(\"sample_voices_file\", sampleVoiceData[i]?.file);\r\n    }\r\n\r\n    formData.append(\"age\", aiAgent?.age as any);\r\n    formData.append(\r\n      \"first_person_pronoun\",\r\n      aiAgent?.first_person_pronoun as any\r\n    );\r\n    formData.append(\r\n      \"second_person_pronoun\",\r\n      aiAgent?.second_person_pronoun as any\r\n    );\r\n    formData.append(\"activity\", aiAgent?.activity as any);\r\n    formData.append(\"hobbies\", aiAgent?.hobbies as any);\r\n    formData.append(\"occupation\", aiAgent?.occupation as any);\r\n    formData.append(\"speaking_style\", aiAgent?.speaking_style as any);\r\n\r\n    axios\r\n      .put(\r\n        `${process.env.REACT_APP_BASE_URL}/aiagents/update/${aiAgent?.id}`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n            \"access-control-allow-origin\": \"*\",\r\n            \"ngrok-skip-browser-warning\": \"*\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        notifySuccess(\"Update agent successfully\");\r\n      })\r\n      .catch((error) => {\r\n        notifyFail(\"Update agent fail\");\r\n      })\r\n      .finally(() => {\r\n        setLoadingEdit(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <ModalCommon\r\n      open={openDetail}\r\n      setOpen={setOpenDetail}\r\n      title=\"Update Ai agent\"\r\n      handleCloseModal={() => {\r\n        setAgent(agent);\r\n      }}\r\n      loadingConfirm={loadingEdit}\r\n      handleConfirm={() => {\r\n        handleUpdateAgent();\r\n      }}\r\n    >\r\n      <Flex className={classes.row}>\r\n        <TextField\r\n          size=\"small\"\r\n          required\r\n          margin=\"normal\"\r\n          id=\"name\"\r\n          value={aiAgent?.name}\r\n          variant=\"outlined\"\r\n          label=\"Name\"\r\n          onChange={(e) =>\r\n            setAgent((prev: any) => ({ ...prev, name: e.target.value }))\r\n          }\r\n          className={classes.inputTxt}\r\n        />\r\n        <TextField\r\n          type=\"number\"\r\n          required\r\n          size=\"small\"\r\n          margin=\"normal\"\r\n          id=\"age\"\r\n          label=\"Age\"\r\n          value={aiAgent?.age}\r\n          variant=\"outlined\"\r\n          onChange={(e) =>\r\n            setAgent((prev: any) => ({ ...prev, age: e.target.value }))\r\n          }\r\n          className={classes.inputTxt}\r\n        />\r\n      </Flex>\r\n      <Flex>\r\n        <TextField\r\n          required\r\n          size=\"small\"\r\n          margin=\"normal\"\r\n          id=\"age\"\r\n          label=\"First person pronoun\"\r\n          value={aiAgent?.first_person_pronoun}\r\n          variant=\"outlined\"\r\n          onChange={(e) =>\r\n            setAgent((prev: any) => ({\r\n              ...prev,\r\n              first_person_pronoun: e.target.value,\r\n            }))\r\n          }\r\n          className={classes.inputTxt}\r\n        />\r\n        <TextField\r\n          required\r\n          size=\"small\"\r\n          margin=\"normal\"\r\n          id=\"age\"\r\n          label=\"Second person pronoun\"\r\n          value={aiAgent?.second_person_pronoun}\r\n          variant=\"outlined\"\r\n          onChange={(e) =>\r\n            setAgent((prev: any) => ({\r\n              ...prev,\r\n              second_person_pronoun: e.target.value,\r\n            }))\r\n          }\r\n          className={classes.inputTxt}\r\n        />\r\n      </Flex>\r\n      <Flex>\r\n        <TextField\r\n          required\r\n          size=\"small\"\r\n          margin=\"normal\"\r\n          id=\"age\"\r\n          label=\"Activity\"\r\n          value={aiAgent?.activity}\r\n          variant=\"outlined\"\r\n          onChange={(e) =>\r\n            setAgent((prev: any) => ({\r\n              ...prev,\r\n              activity: e.target.value,\r\n            }))\r\n          }\r\n          className={classes.inputTxt}\r\n        />\r\n        <TextField\r\n          required\r\n          size=\"small\"\r\n          margin=\"normal\"\r\n          id=\"age\"\r\n          label=\"Hobbies\"\r\n          value={aiAgent?.hobbies}\r\n          variant=\"outlined\"\r\n          onChange={(e) =>\r\n            setAgent((prev: any) => ({\r\n              ...prev,\r\n              hobbies: e.target.value,\r\n            }))\r\n          }\r\n          className={classes.inputTxt}\r\n        />\r\n      </Flex>\r\n      <Flex>\r\n        <TextField\r\n          required\r\n          size=\"small\"\r\n          margin=\"normal\"\r\n          id=\"age\"\r\n          label=\"Occupation\"\r\n          value={aiAgent?.occupation}\r\n          variant=\"outlined\"\r\n          onChange={(e) =>\r\n            setAgent((prev: any) => ({\r\n              ...prev,\r\n              occupation: e.target.value,\r\n            }))\r\n          }\r\n          className={classes.inputTxt}\r\n        />\r\n        <TextField\r\n          required\r\n          size=\"small\"\r\n          margin=\"normal\"\r\n          id=\"age\"\r\n          label=\"Speaking style\"\r\n          value={aiAgent?.speaking_style}\r\n          variant=\"outlined\"\r\n          onChange={(e) =>\r\n            setAgent((prev: any) => ({\r\n              ...prev,\r\n              speaking_style: e.target.value,\r\n            }))\r\n          }\r\n          className={classes.inputTxt}\r\n        />\r\n      </Flex>\r\n      <Flex>\r\n        <TextField\r\n          size=\"small\"\r\n          required\r\n          multiline\r\n          rows={4}\r\n          margin=\"normal\"\r\n          id=\"description\"\r\n          label=\"Introduction\"\r\n          value={aiAgent?.introduction}\r\n          variant=\"outlined\"\r\n          onChange={(e) =>\r\n            setAgent((prev: any) => ({\r\n              ...prev,\r\n              introduction: e.target.value,\r\n            }))\r\n          }\r\n          className={classes.inputTxt}\r\n        />\r\n      </Flex>\r\n      <Flex\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        style={{ marginTop: 20 }}\r\n      >\r\n        <Typography className={classes.label}>Conversation</Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleAddConversation}\r\n          size=\"small\"\r\n          className={classes.button}\r\n          style={{ marginLeft: 20 }}\r\n        >\r\n          <AddIcon />\r\n          Add\r\n        </Button>\r\n      </Flex>\r\n      {aiAgent?.sample_dialog.map((value, i) => (\r\n        <Flex>\r\n          <TextField\r\n            size=\"small\"\r\n            required\r\n            multiline\r\n            rows={2}\r\n            margin=\"normal\"\r\n            id=\"conversation\"\r\n            value={value.content}\r\n            variant=\"outlined\"\r\n            onChange={(e) => handleChangeConversation(i, e)}\r\n            className={classes.inputTxt}\r\n          />\r\n          {aiAgent?.sample_dialog.length > 1 && (\r\n            <div\r\n              onClick={() => handleRemoveConversation(i)}\r\n              className={classes.iconConversation}\r\n            >\r\n              <DeleteIcon />\r\n            </div>\r\n          )}\r\n        </Flex>\r\n      ))}\r\n\r\n      {/* // File  */}\r\n      <Flex flexDirection=\"column\" style={{ marginTop: 15 }}>\r\n        <Typography className={classes.label}>Icon file</Typography>\r\n        <div>{!aiAgent?.iconFile && aiAgent?.icon_file}</div>\r\n        <FormControl margin=\"normal\">\r\n          {/* <label htmlFor=\"image_uploads\">Choose images to upload (PNG, JPG)</label> */}\r\n          {/* <InputLabel htmlFor=\"memoryFileLabel\"></InputLabel> */}\r\n          <input\r\n            type=\"file\"\r\n            id=\"image_uploads\"\r\n            accept=\".jpg,.fbx,.obj,.dae\"\r\n            name=\"image_uploads\"\r\n            onChange={(e) =>\r\n              setAgent((prev: any) => ({\r\n                ...prev,\r\n                iconFile: e.target.files?.[0] as any,\r\n              }))\r\n            }\r\n          />\r\n        </FormControl>\r\n      </Flex>\r\n\r\n      <Flex flexDirection=\"column\" style={{ marginTop: 15 }}>\r\n        <Typography className={classes.label}>PDF file</Typography>\r\n        {!aiAgent?.pdfFile && aiAgent?.pdf_file}\r\n        <FormControl margin=\"normal\">\r\n          {/* <label htmlFor=\"image_uploads\">Choose images to upload (PNG, JPG)</label> */}\r\n          {/* <InputLabel htmlFor=\"memoryFileLabel\"></InputLabel> */}\r\n          <input\r\n            type=\"file\"\r\n            id=\"samplecoives\"\r\n            accept=\".pdf\"\r\n            name=\"samplecoives\"\r\n            onChange={(e) =>\r\n              setAgent((prev: any) => ({\r\n                ...prev,\r\n                pdfFile: e.target.files?.[0] as any,\r\n              }))\r\n            }\r\n          />\r\n        </FormControl>\r\n      </Flex>\r\n\r\n      <Flex\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-between\"\r\n        style={{ marginTop: 20 }}\r\n      >\r\n        <Typography className={classes.label}>Voice file</Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleAddVoiceFile}\r\n          size=\"small\"\r\n          className={classes.button}\r\n          style={{ marginLeft: 20 }}\r\n          disabled={showBtnAddVoiceFile}\r\n        >\r\n          <AddIcon />\r\n          Add\r\n        </Button>\r\n      </Flex>\r\n\r\n      {/* ?.filter((item) => item?.type !== EDIT_AGENT_TYPE.delete) */}\r\n      <Flex flexDirection=\"column\">\r\n        {aiAgent?.sample_voice.map((item, i) => \r\n              <Flex alignItems=\"center\">\r\n                <Flex alignItems=\"center\" style={{ width: \"90%\" }}>\r\n                  <Typography\r\n                    style={{ margin: \"10px 10px 0px 0px\", maxWidth: \"70%\" }}\r\n                  >\r\n                    {typeof item?.file === \"string\"\r\n                      ? item?.file\r\n                      : item?.file?.name}\r\n                  </Typography>\r\n                  <label htmlFor=\"contained-button-file\">\r\n                    <IconButton\r\n                      color=\"primary\"\r\n                      aria-label=\"upload picture\"\r\n                      component=\"span\"\r\n                      // style={{width: '24px'}}\r\n                    >\r\n                      <PhotoCamera style={{ marginLeft: 20}}/>\r\n                      <input\r\n                        type=\"file\"\r\n                        id=\"contained-button-file\"\r\n                        accept=\"audio/*\"\r\n                        className={classes.input}\r\n                        onChange={(e) => {\r\n                          handleChangeVoiceFile(i, e, item);\r\n                        }}\r\n                      />\r\n                    </IconButton>\r\n                  </label>\r\n                </Flex>\r\n                <div\r\n                  onClick={() => handleRemoveVoiceFile(i, item)}\r\n                  className={classes.iconConversation}\r\n                >\r\n                  <DeleteIcon />\r\n                </div>\r\n              </Flex>\r\n        )}\r\n      </Flex>\r\n    </ModalCommon>\r\n  );\r\n};\r\n\r\nexport default ModalEditAgent;\r\n","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\service\\api\\api.ts",[],[],"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\components\\Conversation.tsx",["300","301","302","303","304","305","306","307","308","309","310","311","312","313"],[],"import { Box, Button, HStack, Select, Spinner } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { AudioDeviceConfig, ConversationConfig } from \"vocode\";\r\nimport MicrophoneIcon from \"./MicrophoneIcon\";\r\nimport AudioVisualization from \"./AudioVisualization\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { useConversation } from \"./useConversation\";\r\nimport CallEndIcon from \"@material-ui/icons/CallEnd\";\r\nimport Flex from \"./Flex/Flex\";\r\nimport { CircularProgress, Typography, makeStyles } from \"@material-ui/core\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport MicOffIcon from \"@material-ui/icons/MicOff\";\r\nimport VideocamIcon from \"@material-ui/icons/Videocam\";\r\nimport VolumeUpSharpIcon from \"@material-ui/icons/VolumeUpSharp\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport clsx from 'clsx'\r\nimport avatar from'../assets/images/avatar.png'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { aiAgents } from \"pages/AllCharacters\";\r\nimport { verifyTokenToCall } from \"service/api/api\";\r\nimport ModalNotification from \"./Modal/ModalNotification\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"100%\",\r\n  },\r\n  container: {\r\n    width: 400,\r\n    height: 700,\r\n    margin: \"0 auto\",\r\n    border: \"1px solid\",\r\n  },\r\n  avatar: {\r\n    height: \"40%\",\r\n  },\r\n  img: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  name: {\r\n    marginTop: 20,\r\n  },\r\n  time: {\r\n    marginTop: 20,\r\n    height: 10,\r\n  },\r\n  iconCall: {\r\n    height: \"35%\",\r\n    paddingBottom: \"60px\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"self-end\",\r\n  },\r\n  startCall: {\r\n    backgroundColor: \"limegreen\",\r\n    border: \"1px solid limegreen\",\r\n    \"&:hover\": {\r\n      opacity: \"0.9\",\r\n    },\r\n  },\r\n  endCall: {\r\n    backgroundColor: \"red\",\r\n    border: \"1px solid red\",\r\n    \"&:hover\": {\r\n      opacity: \"0.9\",\r\n    },\r\n  },\r\n  icon: {\r\n    height: 50,\r\n    width: 50,\r\n    margin: \"0 auto\",\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    borderRadius: \"50%\",\r\n    cursor: \"pointer\",\r\n    \"&:hover\": {\r\n      opacity: \"0.7\",\r\n    },\r\n  },\r\n  wrapperLoading: {\r\n    minHeight: \"100vh\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  pageTokenExpired: {\r\n    minHeight: \"100vh\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\n\r\nconst Conversation = () => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const [hours, setHours] = useState(0);\r\n  const [minutes, setMinutes] = useState(0);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const intervalRef = useRef<any>(null);\r\n  const [isCall, setIscall] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [hasExpired, setHasExpired] = useState(false);\r\n\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const token = urlParams.get(\"token\");\r\n  console.log(\"urlParams\", urlParams);\r\n  console.log(\"token\", token);\r\n  console.log(\"hasExpired\", hasExpired);\r\n\r\n  useEffect(() => {\r\n\r\n    if (token) {\r\n        (async () => {\r\n          setLoading(true)\r\n          await verifyTokenToCall(token)\r\n          .then(() => setHasExpired(false))\r\n          .catch(() => setHasExpired(true))\r\n          .finally(() => setLoading(false));\r\n        })();\r\n    }\r\n  }, [token]);\r\n  \r\n  const { status, start, stop, analyserNode } = useConversation({\r\n    backendUrl: process.env.REACT_APP_BASE_URL as string,\r\n    audioDeviceConfig: {},\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (status === \"error\" || status === \"idle\") {\r\n      handleStop();\r\n      setIscall(false);\r\n    }\r\n  }, [status]);\r\n\r\n  //handle call time\r\n  const handleStart = () => {\r\n    intervalRef.current = setInterval(() => {\r\n      setSeconds((seconds) => {\r\n        if (seconds === 59) {\r\n          setMinutes((minutes) => {\r\n            if (minutes === 59) {\r\n              setHours((hours) => hours + 1);\r\n              return 0;\r\n            }\r\n            return minutes + 1;\r\n          });\r\n          return 0;\r\n        }\r\n        return seconds + 1;\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const handleStop = () => {\r\n    clearInterval(intervalRef.current);\r\n    setSeconds(0);\r\n    setMinutes(0)\r\n    setHours(0)\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div className={classes.wrapperLoading}>\r\n          <CircularProgress />\r\n        </div>\r\n      ) : (\r\n        <Box className={classes.container}>\r\n          <Box className={classes.avatar}>\r\n            <img src={avatar} alt=\"avatar\" className={classes.img} />\r\n          </Box>\r\n          {/* <Box className={classes.name}>{nameAgent}</Box> */}\r\n          <Box className={classes.time}>\r\n            {isCall && (\r\n              <>\r\n                {hours.toString().padStart(2, \"0\")}:\r\n                {minutes.toString().padStart(2, \"0\")}:\r\n                {seconds.toString().padStart(2, \"0\")}\r\n              </>\r\n            )}\r\n          </Box>\r\n          <Flex className={classes.iconCall}>\r\n            <div\r\n              className={clsx(classes.icon)}\r\n              style={{ border: \"1px solid gray\" }}\r\n            >\r\n              <MicIcon />\r\n            </div>\r\n            {/* <MicOffIcon /> */}\r\n            <div\r\n              className={clsx(classes.icon)}\r\n              style={{ border: \"1px solid gray\" }}\r\n            >\r\n              <VideocamIcon />\r\n            </div>\r\n            <div\r\n              className={clsx(classes.icon)}\r\n              style={{ border: \"1px solid gray\" }}\r\n            >\r\n              <VolumeUpSharpIcon />\r\n            </div>\r\n          </Flex>\r\n          <Box>\r\n            {!isCall ? (\r\n              <div\r\n                className={clsx(classes.icon, classes.startCall)}\r\n                onClick={() => {\r\n                  setIscall(true);\r\n                  handleStart();\r\n                  start();\r\n                }}\r\n              >\r\n                <CallIcon\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    width: \"30px\",\r\n                    height: \"30px\",\r\n                    color: \"white\",\r\n                  }}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div\r\n                className={clsx(classes.icon, classes.endCall)}\r\n                onClick={() => {\r\n                  setIscall(false);\r\n                  handleStop();\r\n                  stop();\r\n                }}\r\n              >\r\n                <CallEndIcon\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    width: \"30px\",\r\n                    height: \"30px\",\r\n                    color: \"white\",\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      )}\r\n      <ModalNotification\r\n        open={hasExpired}\r\n        alertType=\"error\"\r\n        alertTitle=\"Error\"\r\n        messageNotification=\"This call has expired\"\r\n      />\r\n      {/* {analyserNode && <AudioVisualization analyser={analyserNode} />} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Conversation;\r\n","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\components\\Flex\\Flex.tsx",[],[],"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\service\\api\\loginAPI.tsx",[],[],"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\components\\TableCommon\\TableCommon.tsx",["314","315","316","317","318","319","320","321","322","323","324","325","326"],[],"import React, { useState, forwardRef, PropsWithChildren } from 'react';\r\nimport logo from 'assets/images/logo.svg';\r\nimport {\r\n  Button,\r\n  createStyles,\r\n  FormControl,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Theme,\r\n  withStyles,\r\n} from '@material-ui/core';\r\nimport Icon from 'components/Icon/Icon';\r\nimport Loading from './../Loading/Loading';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapperTable: {\r\n    overflowY: 'auto',\r\n    maxHeight: '100%',\r\n    scrollbarWidth: 'thin',\r\n    scrollbarColor: '#000000',\r\n    '&::-webkit-scrollbar': {\r\n      width: 4,\r\n      height: 4,\r\n    },\r\n    '&::-webkit-scrollbar-thumb': {\r\n      background: 'grey',\r\n      borderRadius: 10,\r\n    },\r\n    [theme.breakpoints.down('xs')]: {\r\n      minHeight: '45vh',\r\n      maxHeight: '50vh',\r\n    },\r\n  },\r\n  stickyHeader: {\r\n    position: 'sticky',\r\n    top: 0,\r\n    zIndex: 1,\r\n  },\r\n  wrapperLoading: {\r\n    minHeight: 400,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    [theme.breakpoints.down('xs')]: {\r\n      minHeight: '37vh',\r\n    },\r\n  },\r\n  wrapperLoadMore: {\r\n    height: 30,\r\n    width: '100%',\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  tableRef: any;\r\n  handleLoadMore: () => void;\r\n  loading: boolean;\r\n  loadMore: boolean;\r\n  tHeader: React.ReactNode;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst TableCommon = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  const { tableRef, handleLoadMore, loading, loadMore, tHeader, children } = props;\r\n\r\n  const handleOnScroll = () => {\r\n    if (!tableRef?.current) return;\r\n    const { scrollTop, scrollHeight, clientHeight } = tableRef.current;\r\n    if (scrollHeight - (scrollTop + clientHeight) >= 3) return;\r\n    handleLoadMore();\r\n  };\r\n\r\n  return (\r\n    <TableContainer className={classes.wrapperTable} ref={tableRef} onScroll={handleOnScroll}>\r\n      <Table aria-label=\"customized table\" stickyHeader style={{ minWidth: 900 }}>\r\n        <TableHead className={classes.stickyHeader}>\r\n          <TableRow>{tHeader}</TableRow>\r\n        </TableHead>\r\n        {!loading && <TableBody>{children}</TableBody>}\r\n      </Table>\r\n      {(loading || loadMore) && (\r\n        <div className={loadMore ? classes.wrapperLoadMore : classes.wrapperLoading}>\r\n          <Loading size={loadMore ? 20 : 40} />\r\n        </div>\r\n      )}\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default forwardRef(TableCommon);\r\n","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\utils\\notify.ts",[],[],"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\service\\token.tsx",[],[],"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\components\\useConversation.ts",["327","328","329","330","331","332","333"],[],"\r\nimport {\r\n  IMediaRecorder,\r\n  MediaRecorder,\r\n  register,\r\n} from \"extendable-media-recorder\";\r\nimport { connect } from \"extendable-media-recorder-wav-encoder\";\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  ConversationConfig,\r\n  ConversationStatus,\r\n  SelfHostedConversationConfig,\r\n} from \"../types/conversation\";\r\nimport { blobToBase64, stringify } from \"../utils\";\r\nimport { AudioEncoding } from \"../types/vocode/audioEncoding\";\r\nimport {\r\n  AudioConfigStartMessage,\r\n  AudioMessage,\r\n  StartMessage,\r\n  StopMessage,\r\n} from \"../types/vocode/websocket\";\r\nimport { DeepgramTranscriberConfig, TranscriberConfig } from \"../types\";\r\nimport { isSafari, isChrome } from \"react-device-detect\";\r\nimport { Buffer } from \"buffer\";\r\n\r\nconst DEFAULT_CHUNK_SIZE = 2048;\r\nconst TIME_SLICE = 10;\r\n\r\nexport const useConversation = (\r\n  config: ConversationConfig | SelfHostedConversationConfig\r\n): {\r\n  status: ConversationStatus;\r\n  start: () => void;\r\n  stop: () => void;\r\n  error: Error | undefined;\r\n  analyserNode: AnalyserNode | undefined;\r\n} => {\r\n  const [audioContext, setAudioContext] = React.useState<AudioContext>();\r\n  const [audioAnalyser, setAudioAnalyser] = React.useState<AnalyserNode>();\r\n  const [audioQueue, setAudioQueue] = React.useState<Buffer[]>([]);\r\n  const [processing, setProcessing] = React.useState(false);\r\n  const [recorder, setRecorder] = React.useState<IMediaRecorder>();\r\n  const [socket, setSocket] = React.useState<WebSocket>();\r\n  const [status, setStatus] = React.useState<ConversationStatus>(\"idle\");\r\n  const [error, setError] = React.useState<Error>();\r\n\r\n  // get audio context and metadata about user audio\r\n  React.useEffect(() => {\r\n    const audioContext = new AudioContext();\r\n    setAudioContext(audioContext);\r\n    const audioAnalyser = audioContext.createAnalyser();\r\n    setAudioAnalyser(audioAnalyser);\r\n  }, []);\r\n\r\n  // once the conversation is connected, stream the microphone audio into the socket\r\n  React.useEffect(() => {\r\n    if (!recorder || !socket) return;\r\n    if (status === \"connected\") {\r\n      recorder.addEventListener(\"dataavailable\", ({ data }: { data: Blob }) => {\r\n        blobToBase64(data).then((base64Encoded: string | null) => {\r\n          \r\n          if (!base64Encoded) return;\r\n          const audioMessage: AudioMessage = {\r\n            type: \"websocket_audio\",\r\n            data: base64Encoded,\r\n          };\r\n\r\n          if(socket.readyState === WebSocket.OPEN) {\r\n            socket.send(stringify(audioMessage));\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }, [recorder, socket, status]);\r\n\r\n  // accept wav audio from webpage\r\n  React.useEffect(() => {\r\n    const registerWav = async () => {\r\n      await register(await connect());\r\n    };\r\n    registerWav().catch(console.error);\r\n  }, []);\r\n\r\n  // play audio that is queued\r\n  \r\n  React.useEffect(() => {\r\n    const playArrayBuffer = (arrayBuffer: ArrayBuffer) => {\r\n      audioContext &&\r\n        audioAnalyser &&\r\n        audioContext.decodeAudioData(arrayBuffer, (buffer) => {\r\n          const source = audioContext.createBufferSource();\r\n          source.buffer = buffer;\r\n          source.connect(audioContext.destination);\r\n          source.connect(audioAnalyser);\r\n          source.start(0);\r\n          source.onended = () => {\r\n            setProcessing(false);\r\n          };\r\n        });\r\n    };\r\n    if (!processing && audioQueue.length > 0) {\r\n      setProcessing(true);\r\n      const audio = audioQueue.shift();\r\n\r\n      audio &&\r\n        fetch(URL.createObjectURL(new Blob([audio])))\r\n          .then((response) => response.arrayBuffer())\r\n          .then(playArrayBuffer);\r\n    }\r\n  }, [audioQueue, processing]);\r\n\r\n  const stopConversation = (error?: Error) => {\r\n    setAudioQueue([]);\r\n    if (error) {\r\n      setError(error);\r\n      setStatus(\"error\");\r\n    } else {\r\n      setStatus(\"idle\");\r\n    }\r\n    if (!recorder || !socket) return;\r\n    recorder.stop();\r\n    const stopMessage: StopMessage = {\r\n      type: \"websocket_stop\",\r\n    };\r\n    socket.send(stringify(stopMessage));\r\n    socket.close();\r\n  };\r\n\r\n  const getBackendUrl = () => {\r\n    if (\"backendUrl\" in config) {\r\n      return config.backendUrl;\r\n    } else {\r\n      throw new Error(\"Invalid config\");\r\n    }\r\n  };\r\n\r\n  const getAudioConfigStartMessage = (\r\n    inputAudioMetadata: { samplingRate: number; audioEncoding: AudioEncoding },\r\n    outputAudioMetadata: { samplingRate: number; audioEncoding: AudioEncoding },\r\n    chunkSize: number | undefined,\r\n    downsampling: number | undefined,\r\n    conversationId: string | undefined\r\n  ): AudioConfigStartMessage => ({\r\n    type: \"websocket_audio_config_start\",\r\n    inputAudioConfig: {\r\n      samplingRate: inputAudioMetadata.samplingRate,\r\n      audioEncoding: inputAudioMetadata.audioEncoding,\r\n      chunkSize: chunkSize || DEFAULT_CHUNK_SIZE,\r\n      downsampling,\r\n      isSafari: isSafari,\r\n    },\r\n    outputAudioConfig: {\r\n      samplingRate: outputAudioMetadata.samplingRate,\r\n      audioEncoding: outputAudioMetadata.audioEncoding,\r\n    },\r\n    conversationId,\r\n  });\r\n\r\n  const startConversation = async () => {\r\n    if (!audioContext || !audioAnalyser) return;\r\n    setStatus(\"connecting\");\r\n\r\n    // if (!isSafari && !isChrome) {\r\n    //   stopConversation(new Error(\"Unsupported browser\"));\r\n    //   return;\r\n    // }\r\n\r\n    if (audioContext.state === \"suspended\") {\r\n      audioContext.resume();\r\n    }\r\n\r\n    const backendUrl = getBackendUrl();\r\n\r\n    setError(undefined);\r\n    const socket = new WebSocket(backendUrl);\r\n    let error: Error | undefined;\r\n    socket.onerror = (event) => {\r\n      console.error(event);\r\n      error = new Error(\"See console for error details\");\r\n    };\r\n    socket.onmessage = (event) => {\r\n      const message = JSON.parse(event.data);\r\n      if (message.type === \"websocket_audio\") {\r\n        setAudioQueue((prev) => [...prev, Buffer.from(message.data, \"base64\")]);\r\n      } else if (message.type === \"websocket_ready\") {\r\n        setStatus(\"connected\");\r\n      }\r\n    };\r\n    socket.onclose = () => {\r\n      stopConversation(error);\r\n    };\r\n    setSocket(socket);\r\n\r\n    // wait for socket to be ready\r\n    await new Promise((resolve) => {\r\n      const interval = setInterval(() => {\r\n        if (socket.readyState === WebSocket.OPEN) {\r\n          clearInterval(interval);\r\n          resolve(null);\r\n        }\r\n      }, 100);\r\n    });\r\n\r\n    let audioStream;\r\n    try {\r\n      const trackConstraints: MediaTrackConstraints = {\r\n        echoCancellation: true,\r\n      };\r\n      if (config.audioDeviceConfig.inputDeviceId) {\r\n        trackConstraints.deviceId = config.audioDeviceConfig.inputDeviceId;\r\n      }\r\n      audioStream = await navigator.mediaDevices.getUserMedia({\r\n        video: false,\r\n        audio: trackConstraints,\r\n      });\r\n    } catch (error) {\r\n      if (error instanceof DOMException && error.name === \"NotAllowedError\") {\r\n        alert(\r\n          \"Allowlist this site at chrome://settings/content/microphone to talk to the bot.\"\r\n        );\r\n        error = new Error(\"Microphone access denied\");\r\n      }\r\n      console.error(error);\r\n      stopConversation(error as Error);\r\n      return;\r\n    }\r\n\r\n    const micSettings = audioStream.getAudioTracks()[0].getSettings();\r\n    const inputAudioMetadata = {\r\n      samplingRate: micSettings.sampleRate || audioContext.sampleRate,\r\n      audioEncoding: \"linear16\" as AudioEncoding,\r\n    };\r\n    const outputAudioMetadata = {\r\n      samplingRate:\r\n        config.audioDeviceConfig.outputSamplingRate || audioContext.sampleRate,\r\n      audioEncoding: \"linear16\" as AudioEncoding,\r\n    };\r\n\r\n    const selfHostedConversationConfig = config as SelfHostedConversationConfig;\r\n\r\n    const  startMessage = getAudioConfigStartMessage(\r\n        inputAudioMetadata,\r\n        outputAudioMetadata,\r\n        selfHostedConversationConfig.chunkSize,\r\n        selfHostedConversationConfig.downsampling,\r\n        selfHostedConversationConfig.conversationId\r\n      );\r\n\r\n    socket.send(stringify(startMessage));\r\n    \r\n    let recorderToUse = recorder;\r\n    if (recorderToUse && recorderToUse.state === \"paused\") {\r\n      recorderToUse.resume();\r\n    } else if (!recorderToUse) {\r\n      recorderToUse = new MediaRecorder(audioStream, {\r\n        mimeType: isSafari ? \"audio/mp4\" : \"audio/wav\",\r\n      });\r\n      \r\n      setRecorder(recorderToUse);\r\n    }\r\n\r\n    if (recorderToUse.state === \"recording\") {\r\n      // When the recorder is in the recording state, see:\r\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/state\r\n      // which is not expected to call `start()` according to:\r\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/start.\r\n      return;\r\n    } \r\n    recorderToUse.start(TIME_SLICE);\r\n  };\r\n\r\n  return {\r\n    status,\r\n    start: startConversation,\r\n    stop: stopConversation,\r\n    error,\r\n    analyserNode: audioAnalyser,\r\n  };\r\n};","D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\components\\Modal\\ModalNotification.tsx",[],[],"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\components\\Modal\\ModalCommon.tsx",[],[],"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\components\\Loading\\Loading.tsx",[],[],"D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\src\\utils.ts",[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\index.tsx",[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\serviceWorker.ts",[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\App.tsx",["334","335"],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\theme.ts",[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\contexts\\AuthProvider.tsx",[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\contexts\\Auth.tsx",[],[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\pages\\AllCharacters.tsx",["336","337","338","339","340","341","342","343","344"],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\templates\\InitUserWrapper.tsx",[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\pages\\loginPage\\CallBackPage.tsx",[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\pages\\loginPage\\LoginPage.tsx",[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\pages\\callScreen\\CallScreen.tsx",[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\templates\\MenuAppBar.tsx",[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\utils\\util.ts",[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\components\\Conversation.tsx",["345","346","347","348","349","350","351","352","353","354","355","356","357","358"],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\pages\\modal\\ModalCreateAiagent.tsx",["359"],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\service\\api\\api.ts",[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\pages\\modal\\ModalEditAiagent.tsx",["360","361","362","363","364","365","366"],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\service\\api\\loginAPI.tsx",[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\components\\Flex\\Flex.tsx",[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\components\\TableCommon\\TableCommon.tsx",["367","368","369","370","371","372","373","374","375","376","377","378","379"],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\components\\useConversation.ts",["380","381","382","383","384","385","386"],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\utils\\notify.ts",[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\service\\token.tsx",[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\components\\Modal\\ModalNotification.tsx",[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\components\\Modal\\ModalCommon.tsx",[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\components\\Loading\\Loading.tsx",[],[],"D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\src\\utils.ts",[],[],{"ruleId":"387","severity":1,"message":"388","line":3,"column":25,"nodeType":"389","messageId":"390","endLine":3,"endColumn":33},{"ruleId":"387","severity":1,"message":"391","line":13,"column":7,"nodeType":"389","messageId":"390","endLine":13,"endColumn":19},{"ruleId":"387","severity":1,"message":"392","line":15,"column":8,"nodeType":"389","messageId":"390","endLine":15,"endColumn":13},{"ruleId":"387","severity":1,"message":"393","line":23,"column":23,"nodeType":"389","messageId":"390","endLine":23,"endColumn":38},{"ruleId":"387","severity":1,"message":"394","line":175,"column":10,"nodeType":"389","messageId":"390","endLine":175,"endColumn":17},{"ruleId":"387","severity":1,"message":"395","line":176,"column":10,"nodeType":"389","messageId":"390","endLine":176,"endColumn":17},{"ruleId":"387","severity":1,"message":"396","line":176,"column":19,"nodeType":"389","messageId":"390","endLine":176,"endColumn":29},{"ruleId":"387","severity":1,"message":"397","line":177,"column":10,"nodeType":"389","messageId":"390","endLine":177,"endColumn":15},{"ruleId":"387","severity":1,"message":"398","line":177,"column":17,"nodeType":"389","messageId":"390","endLine":177,"endColumn":29},{"ruleId":"387","severity":1,"message":"399","line":180,"column":10,"nodeType":"389","messageId":"390","endLine":180,"endColumn":15},{"ruleId":"387","severity":1,"message":"400","line":180,"column":17,"nodeType":"389","messageId":"390","endLine":180,"endColumn":25},{"ruleId":"387","severity":1,"message":"394","line":97,"column":10,"nodeType":"389","messageId":"390","endLine":97,"endColumn":17},{"ruleId":"387","severity":1,"message":"401","line":2,"column":9,"nodeType":"389","messageId":"390","endLine":2,"endColumn":19},{"ruleId":"387","severity":1,"message":"402","line":3,"column":18,"nodeType":"389","messageId":"390","endLine":3,"endColumn":21},{"ruleId":"387","severity":1,"message":"403","line":3,"column":48,"nodeType":"389","messageId":"390","endLine":3,"endColumn":58},{"ruleId":"387","severity":1,"message":"404","line":7,"column":30,"nodeType":"389","messageId":"390","endLine":7,"endColumn":36},{"ruleId":"387","severity":1,"message":"405","line":8,"column":10,"nodeType":"389","messageId":"390","endLine":8,"endColumn":20},{"ruleId":"387","severity":1,"message":"406","line":8,"column":22,"nodeType":"389","messageId":"390","endLine":8,"endColumn":31},{"ruleId":"387","severity":1,"message":"407","line":9,"column":10,"nodeType":"389","messageId":"390","endLine":9,"endColumn":24},{"ruleId":"387","severity":1,"message":"408","line":1,"column":15,"nodeType":"389","messageId":"390","endLine":1,"endColumn":21},{"ruleId":"387","severity":1,"message":"409","line":1,"column":23,"nodeType":"389","messageId":"390","endLine":1,"endColumn":29},{"ruleId":"387","severity":1,"message":"410","line":1,"column":31,"nodeType":"389","messageId":"390","endLine":1,"endColumn":37},{"ruleId":"387","severity":1,"message":"411","line":1,"column":39,"nodeType":"389","messageId":"390","endLine":1,"endColumn":46},{"ruleId":"387","severity":1,"message":"412","line":3,"column":10,"nodeType":"389","messageId":"390","endLine":3,"endColumn":27},{"ruleId":"387","severity":1,"message":"413","line":3,"column":29,"nodeType":"389","messageId":"390","endLine":3,"endColumn":47},{"ruleId":"387","severity":1,"message":"414","line":4,"column":8,"nodeType":"389","messageId":"390","endLine":4,"endColumn":22},{"ruleId":"387","severity":1,"message":"415","line":5,"column":8,"nodeType":"389","messageId":"390","endLine":5,"endColumn":26},{"ruleId":"387","severity":1,"message":"416","line":6,"column":10,"nodeType":"389","messageId":"390","endLine":6,"endColumn":18},{"ruleId":"387","severity":1,"message":"417","line":10,"column":28,"nodeType":"389","messageId":"390","endLine":10,"endColumn":38},{"ruleId":"387","severity":1,"message":"418","line":12,"column":8,"nodeType":"389","messageId":"390","endLine":12,"endColumn":18},{"ruleId":"387","severity":1,"message":"419","line":19,"column":10,"nodeType":"389","messageId":"390","endLine":19,"endColumn":18},{"ruleId":"387","severity":1,"message":"420","line":100,"column":9,"nodeType":"389","messageId":"390","endLine":100,"endColumn":17},{"ruleId":"387","severity":1,"message":"421","line":128,"column":32,"nodeType":"389","messageId":"390","endLine":128,"endColumn":44},{"ruleId":"387","severity":1,"message":"422","line":1,"column":17,"nodeType":"389","messageId":"390","endLine":1,"endColumn":25},{"ruleId":"387","severity":1,"message":"423","line":1,"column":39,"nodeType":"389","messageId":"390","endLine":1,"endColumn":56},{"ruleId":"387","severity":1,"message":"424","line":2,"column":8,"nodeType":"389","messageId":"390","endLine":2,"endColumn":12},{"ruleId":"387","severity":1,"message":"408","line":4,"column":3,"nodeType":"389","messageId":"390","endLine":4,"endColumn":9},{"ruleId":"387","severity":1,"message":"425","line":5,"column":3,"nodeType":"389","messageId":"390","endLine":5,"endColumn":15},{"ruleId":"387","severity":1,"message":"426","line":6,"column":3,"nodeType":"389","messageId":"390","endLine":6,"endColumn":14},{"ruleId":"387","severity":1,"message":"427","line":8,"column":3,"nodeType":"389","messageId":"390","endLine":8,"endColumn":11},{"ruleId":"387","severity":1,"message":"410","line":9,"column":3,"nodeType":"389","messageId":"390","endLine":9,"endColumn":9},{"ruleId":"387","severity":1,"message":"428","line":12,"column":3,"nodeType":"389","messageId":"390","endLine":12,"endColumn":12},{"ruleId":"387","severity":1,"message":"429","line":16,"column":3,"nodeType":"389","messageId":"390","endLine":16,"endColumn":12},{"ruleId":"387","severity":1,"message":"430","line":17,"column":3,"nodeType":"389","messageId":"390","endLine":17,"endColumn":8},{"ruleId":"387","severity":1,"message":"431","line":18,"column":3,"nodeType":"389","messageId":"390","endLine":18,"endColumn":13},{"ruleId":"387","severity":1,"message":"432","line":20,"column":8,"nodeType":"389","messageId":"390","endLine":20,"endColumn":12},{"ruleId":"387","severity":1,"message":"433","line":8,"column":17,"nodeType":"389","messageId":"390","endLine":8,"endColumn":26},{"ruleId":"387","severity":1,"message":"434","line":19,"column":3,"nodeType":"389","messageId":"390","endLine":19,"endColumn":15},{"ruleId":"387","severity":1,"message":"435","line":22,"column":10,"nodeType":"389","messageId":"390","endLine":22,"endColumn":35},{"ruleId":"387","severity":1,"message":"436","line":22,"column":37,"nodeType":"389","messageId":"390","endLine":22,"endColumn":54},{"ruleId":"387","severity":1,"message":"437","line":23,"column":20,"nodeType":"389","messageId":"390","endLine":23,"endColumn":28},{"ruleId":"438","severity":1,"message":"439","line":110,"column":6,"nodeType":"440","endLine":110,"endColumn":30,"suggestions":"441"},{"ruleId":"442","severity":1,"message":"443","line":221,"column":9,"nodeType":"389","messageId":"444","endLine":221,"endColumn":14},{"ruleId":"387","severity":1,"message":"388","line":3,"column":25,"nodeType":"389","messageId":"390","endLine":3,"endColumn":33},{"ruleId":"387","severity":1,"message":"391","line":13,"column":7,"nodeType":"389","messageId":"390","endLine":13,"endColumn":19},{"ruleId":"387","severity":1,"message":"392","line":15,"column":8,"nodeType":"389","messageId":"390","endLine":15,"endColumn":13},{"ruleId":"387","severity":1,"message":"393","line":23,"column":23,"nodeType":"389","messageId":"390","endLine":23,"endColumn":38},{"ruleId":"387","severity":1,"message":"394","line":175,"column":10,"nodeType":"389","messageId":"390","endLine":175,"endColumn":17},{"ruleId":"387","severity":1,"message":"395","line":176,"column":10,"nodeType":"389","messageId":"390","endLine":176,"endColumn":17},{"ruleId":"387","severity":1,"message":"396","line":176,"column":19,"nodeType":"389","messageId":"390","endLine":176,"endColumn":29},{"ruleId":"387","severity":1,"message":"397","line":177,"column":10,"nodeType":"389","messageId":"390","endLine":177,"endColumn":15},{"ruleId":"387","severity":1,"message":"398","line":177,"column":17,"nodeType":"389","messageId":"390","endLine":177,"endColumn":29},{"ruleId":"387","severity":1,"message":"399","line":180,"column":10,"nodeType":"389","messageId":"390","endLine":180,"endColumn":15},{"ruleId":"387","severity":1,"message":"400","line":180,"column":17,"nodeType":"389","messageId":"390","endLine":180,"endColumn":25},{"ruleId":"387","severity":1,"message":"408","line":1,"column":15,"nodeType":"389","messageId":"390","endLine":1,"endColumn":21},{"ruleId":"387","severity":1,"message":"409","line":1,"column":23,"nodeType":"389","messageId":"390","endLine":1,"endColumn":29},{"ruleId":"387","severity":1,"message":"410","line":1,"column":31,"nodeType":"389","messageId":"390","endLine":1,"endColumn":37},{"ruleId":"387","severity":1,"message":"411","line":1,"column":39,"nodeType":"389","messageId":"390","endLine":1,"endColumn":46},{"ruleId":"387","severity":1,"message":"412","line":3,"column":10,"nodeType":"389","messageId":"390","endLine":3,"endColumn":27},{"ruleId":"387","severity":1,"message":"413","line":3,"column":29,"nodeType":"389","messageId":"390","endLine":3,"endColumn":47},{"ruleId":"387","severity":1,"message":"414","line":4,"column":8,"nodeType":"389","messageId":"390","endLine":4,"endColumn":22},{"ruleId":"387","severity":1,"message":"415","line":5,"column":8,"nodeType":"389","messageId":"390","endLine":5,"endColumn":26},{"ruleId":"387","severity":1,"message":"416","line":6,"column":10,"nodeType":"389","messageId":"390","endLine":6,"endColumn":18},{"ruleId":"387","severity":1,"message":"417","line":10,"column":28,"nodeType":"389","messageId":"390","endLine":10,"endColumn":38},{"ruleId":"387","severity":1,"message":"418","line":12,"column":8,"nodeType":"389","messageId":"390","endLine":12,"endColumn":18},{"ruleId":"387","severity":1,"message":"419","line":19,"column":10,"nodeType":"389","messageId":"390","endLine":19,"endColumn":18},{"ruleId":"387","severity":1,"message":"420","line":100,"column":9,"nodeType":"389","messageId":"390","endLine":100,"endColumn":17},{"ruleId":"387","severity":1,"message":"421","line":128,"column":32,"nodeType":"389","messageId":"390","endLine":128,"endColumn":44},{"ruleId":"387","severity":1,"message":"394","line":97,"column":10,"nodeType":"389","messageId":"390","endLine":97,"endColumn":17},{"ruleId":"387","severity":1,"message":"401","line":2,"column":9,"nodeType":"389","messageId":"390","endLine":2,"endColumn":19},{"ruleId":"387","severity":1,"message":"402","line":3,"column":18,"nodeType":"389","messageId":"390","endLine":3,"endColumn":21},{"ruleId":"387","severity":1,"message":"403","line":3,"column":48,"nodeType":"389","messageId":"390","endLine":3,"endColumn":58},{"ruleId":"387","severity":1,"message":"404","line":7,"column":30,"nodeType":"389","messageId":"390","endLine":7,"endColumn":36},{"ruleId":"387","severity":1,"message":"405","line":8,"column":10,"nodeType":"389","messageId":"390","endLine":8,"endColumn":20},{"ruleId":"387","severity":1,"message":"406","line":8,"column":22,"nodeType":"389","messageId":"390","endLine":8,"endColumn":31},{"ruleId":"387","severity":1,"message":"407","line":9,"column":10,"nodeType":"389","messageId":"390","endLine":9,"endColumn":24},{"ruleId":"387","severity":1,"message":"422","line":1,"column":17,"nodeType":"389","messageId":"390","endLine":1,"endColumn":25},{"ruleId":"387","severity":1,"message":"423","line":1,"column":39,"nodeType":"389","messageId":"390","endLine":1,"endColumn":56},{"ruleId":"387","severity":1,"message":"424","line":2,"column":8,"nodeType":"389","messageId":"390","endLine":2,"endColumn":12},{"ruleId":"387","severity":1,"message":"408","line":4,"column":3,"nodeType":"389","messageId":"390","endLine":4,"endColumn":9},{"ruleId":"387","severity":1,"message":"425","line":5,"column":3,"nodeType":"389","messageId":"390","endLine":5,"endColumn":15},{"ruleId":"387","severity":1,"message":"426","line":6,"column":3,"nodeType":"389","messageId":"390","endLine":6,"endColumn":14},{"ruleId":"387","severity":1,"message":"427","line":8,"column":3,"nodeType":"389","messageId":"390","endLine":8,"endColumn":11},{"ruleId":"387","severity":1,"message":"410","line":9,"column":3,"nodeType":"389","messageId":"390","endLine":9,"endColumn":9},{"ruleId":"387","severity":1,"message":"428","line":12,"column":3,"nodeType":"389","messageId":"390","endLine":12,"endColumn":12},{"ruleId":"387","severity":1,"message":"429","line":16,"column":3,"nodeType":"389","messageId":"390","endLine":16,"endColumn":12},{"ruleId":"387","severity":1,"message":"430","line":17,"column":3,"nodeType":"389","messageId":"390","endLine":17,"endColumn":8},{"ruleId":"387","severity":1,"message":"431","line":18,"column":3,"nodeType":"389","messageId":"390","endLine":18,"endColumn":13},{"ruleId":"387","severity":1,"message":"432","line":20,"column":8,"nodeType":"389","messageId":"390","endLine":20,"endColumn":12},{"ruleId":"387","severity":1,"message":"433","line":8,"column":17,"nodeType":"389","messageId":"390","endLine":8,"endColumn":26},{"ruleId":"387","severity":1,"message":"434","line":19,"column":3,"nodeType":"389","messageId":"390","endLine":19,"endColumn":15},{"ruleId":"387","severity":1,"message":"435","line":22,"column":10,"nodeType":"389","messageId":"390","endLine":22,"endColumn":35},{"ruleId":"387","severity":1,"message":"436","line":22,"column":37,"nodeType":"389","messageId":"390","endLine":22,"endColumn":54},{"ruleId":"387","severity":1,"message":"437","line":23,"column":20,"nodeType":"389","messageId":"390","endLine":23,"endColumn":28},{"ruleId":"438","severity":1,"message":"439","line":110,"column":6,"nodeType":"440","endLine":110,"endColumn":30,"suggestions":"445"},{"ruleId":"442","severity":1,"message":"443","line":221,"column":9,"nodeType":"389","messageId":"444","endLine":221,"endColumn":14},"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'CallBackPage' is assigned a value but never used.","'axios' is defined but never used.","'EDIT_AGENT_TYPE' is defined but never used.","'loading' is assigned a value but never used.","'pdfFile' is assigned a value but never used.","'setPdfFile' is assigned a value but never used.","'voice' is assigned a value but never used.","'setVoiceFile' is assigned a value but never used.","'agent' is assigned a value but never used.","'setAgent' is assigned a value but never used.","'RemoveIcon' is defined but never used.","'Fab' is defined but never used.","'InputLabel' is defined but never used.","'useRef' is defined but never used.","'IAgentInfo' is defined but never used.","'initAgent' is defined but never used.","'updateAgentAPI' is defined but never used.","'Button' is defined but never used.","'HStack' is defined but never used.","'Select' is defined but never used.","'Spinner' is defined but never used.","'AudioDeviceConfig' is defined but never used.","'ConversationConfig' is defined but never used.","'MicrophoneIcon' is defined but never used.","'AudioVisualization' is defined but never used.","'isMobile' is defined but never used.","'Typography' is defined but never used.","'MicOffIcon' is defined but never used.","'aiAgents' is defined but never used.","'location' is assigned a value but never used.","'analyserNode' is assigned a value but never used.","'useState' is defined but never used.","'PropsWithChildren' is defined but never used.","'logo' is defined but never used.","'createStyles' is defined but never used.","'FormControl' is defined but never used.","'MenuItem' is defined but never used.","'TableCell' is defined but never used.","'TextField' is defined but never used.","'Theme' is defined but never used.","'withStyles' is defined but never used.","'Icon' is defined but never used.","'useEffect' is defined but never used.","'StartMessage' is defined but never used.","'DeepgramTranscriberConfig' is defined but never used.","'TranscriberConfig' is defined but never used.","'isChrome' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'audioAnalyser' and 'audioContext'. Either include them or remove the dependency array.","ArrayExpression",["446"],"no-ex-assign","Do not assign to the exception parameter.","unexpected",["447"],{"desc":"448","fix":"449"},{"desc":"448","fix":"450"},"Update the dependencies array to be: [audioAnalyser, audioContext, audioQueue, processing]",{"range":"451","text":"452"},{"range":"453","text":"452"},[3642,3666],"[audioAnalyser, audioContext, audioQueue, processing]",[3642,3666]]