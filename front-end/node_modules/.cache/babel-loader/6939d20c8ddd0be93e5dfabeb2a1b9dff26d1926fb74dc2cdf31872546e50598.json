{"ast":null,"code":"export const createBlobEventFactory = nativeBlobEventConstructor => {\n  return (type, blobEventInit) => {\n    if (nativeBlobEventConstructor === null) {\n      throw new Error('A native BlobEvent could not be created.');\n    }\n    return new nativeBlobEventConstructor(type, blobEventInit);\n  };\n};","map":{"version":3,"mappings":"AAEA,OAAO,MAAMA,sBAAsB,GAA8BC,0BAA0B,IAAI;EAC3F,OAAO,CAACC,IAAI,EAAEC,aAAa,KAAI;IAC3B,IAAIF,0BAA0B,KAAK,IAAI,EAAE;MACrC,MAAM,IAAIG,KAAK,CAAC,0CAA0C,CAAC;;IAG/D,OAAO,IAAIH,0BAA0B,CAACC,IAAI,EAAEC,aAAa,CAAC;EAC9D,CAAC;AACL,CAAC","names":["createBlobEventFactory","nativeBlobEventConstructor","type","blobEventInit","Error"],"sources":["D:\\Nam_4\\Thuc-tap-NCC\\Chatbot-AIME\\AIME\\front-end\\node_modules\\extendable-media-recorder\\src\\factories\\blob-event-factory.ts"],"sourcesContent":["import { TBlobEventFactoryFactory } from '../types';\n\nexport const createBlobEventFactory: TBlobEventFactoryFactory = (nativeBlobEventConstructor) => {\n    return (type, blobEventInit) => {\n        if (nativeBlobEventConstructor === null) {\n            throw new Error('A native BlobEvent could not be created.');\n        }\n\n        return new nativeBlobEventConstructor(type, blobEventInit);\n    };\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}