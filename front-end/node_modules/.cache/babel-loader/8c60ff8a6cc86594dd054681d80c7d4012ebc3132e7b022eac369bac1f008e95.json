{"ast":null,"code":"import { snakeCase } from \"snake-case\";\nexport const blobToBase64 = blob => {\n  return new Promise((resolve, _) => {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      var _reader$result;\n      return resolve(((_reader$result = reader.result) === null || _reader$result === void 0 ? void 0 : _reader$result.toString().split(\",\")[1]) || null);\n    };\n    reader.readAsDataURL(blob);\n  });\n};\nexport const stringify = obj => {\n  return JSON.stringify(obj, function (key, value) {\n    if (value && typeof value === \"object\") {\n      var replacement = {};\n      for (var k in value) {\n        if (Object.hasOwnProperty.call(value, k)) {\n          replacement[k && snakeCase(k.toString())] = value[k];\n        }\n      }\n      return replacement;\n    }\n    return value;\n  });\n};","map":{"version":3,"names":["snakeCase","blobToBase64","blob","Promise","resolve","_","reader","FileReader","onloadend","result","toString","split","readAsDataURL","stringify","obj","JSON","key","value","replacement","k","Object","hasOwnProperty","call"],"sources":["D:/Nam_4/Thuc-tap-NCC/Chatbot-AIME/AIME/front-end/src/utils.ts"],"sourcesContent":["import { snakeCase } from \"snake-case\";\r\n\r\nexport const blobToBase64 = (blob: Blob): Promise<string | null> => {\r\n  return new Promise((resolve, _) => {\r\n    const reader = new FileReader();\r\n    reader.onloadend = () =>\r\n      resolve(reader.result?.toString().split(\",\")[1] || null);\r\n    reader.readAsDataURL(blob);\r\n  });\r\n};\r\n\r\nexport const stringify = (obj: Object): string => {\r\n  return JSON.stringify(obj, function (key, value) {\r\n    if (value && typeof value === \"object\") {\r\n      var replacement: { [key: string]: any } = {};\r\n      for (var k in value) {\r\n        if (Object.hasOwnProperty.call(value, k)) {\r\n          replacement[k && snakeCase(k.toString())] = value[k];\r\n        }\r\n      }\r\n      return replacement;\r\n    }\r\n    return value;\r\n  });\r\n};\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,YAAY;AAEtC,OAAO,MAAMC,YAAY,GAAIC,IAAU,IAA6B;EAClE,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,CAAC,KAAK;IACjC,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC/BD,MAAM,CAACE,SAAS,GAAG;MAAA;MAAA,OACjBJ,OAAO,CAAC,mBAAAE,MAAM,CAACG,MAAM,mDAAb,eAAeC,QAAQ,EAAE,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAI,IAAI,CAAC;IAAA;IAC1DL,MAAM,CAACM,aAAa,CAACV,IAAI,CAAC;EAC5B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMW,SAAS,GAAIC,GAAW,IAAa;EAChD,OAAOC,IAAI,CAACF,SAAS,CAACC,GAAG,EAAE,UAAUE,GAAG,EAAEC,KAAK,EAAE;IAC/C,IAAIA,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MACtC,IAAIC,WAAmC,GAAG,CAAC,CAAC;MAC5C,KAAK,IAAIC,CAAC,IAAIF,KAAK,EAAE;QACnB,IAAIG,MAAM,CAACC,cAAc,CAACC,IAAI,CAACL,KAAK,EAAEE,CAAC,CAAC,EAAE;UACxCD,WAAW,CAACC,CAAC,IAAInB,SAAS,CAACmB,CAAC,CAACT,QAAQ,EAAE,CAAC,CAAC,GAAGO,KAAK,CAACE,CAAC,CAAC;QACtD;MACF;MACA,OAAOD,WAAW;IACpB;IACA,OAAOD,KAAK;EACd,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}