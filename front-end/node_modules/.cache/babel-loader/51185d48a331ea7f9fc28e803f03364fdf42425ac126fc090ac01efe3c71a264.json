{"ast":null,"code":"export const createMidiOutputs = wrapSubscribeFunction => {\n  return midiAccess => wrapSubscribeFunction(observer => {\n    let midiOutputs = Array.from(midiAccess.outputs.values());\n    const emitMidiOutputs = () => {\n      const midiAccessOutputs = midiAccess.outputs;\n      if (midiOutputs.length !== midiAccessOutputs.size || midiOutputs.some(_ref => {\n        let {\n          id\n        } = _ref;\n        return !midiAccessOutputs.has(id);\n      })) {\n        midiOutputs = Array.from(midiAccessOutputs.values());\n        observer.next(midiOutputs);\n      }\n    };\n    observer.next(midiOutputs);\n    midiAccess.addEventListener('statechange', emitMidiOutputs);\n    return () => midiAccess.removeEventListener('statechange', emitMidiOutputs);\n  });\n};","map":{"version":3,"mappings":"AAEA,OAAO,MAAMA,iBAAiB,GAAyBC,qBAAqB,IAAI;EAC5E,OAAQC,UAAU,IACdD,qBAAqB,CAAEE,QAAQ,IAAI;IAC/B,IAAIC,WAAW,GAAGC,KAAK,CAACC,IAAI,CAACJ,UAAU,CAACK,OAAO,CAACC,MAAM,EAAE,CAAC;IAEzD,MAAMC,eAAe,GAAG,MAAK;MACzB,MAAMC,iBAAiB,GAAGR,UAAU,CAACK,OAAO;MAE5C,IAAIH,WAAW,CAACO,MAAM,KAAKD,iBAAiB,CAACE,IAAI,IAAIR,WAAW,CAACS,IAAI,CAAC;QAAA,IAAC;UAAEC;QAAE,CAAE;QAAA,OAAK,CAACJ,iBAAiB,CAACK,GAAG,CAACD,EAAE,CAAC;MAAA,EAAC,EAAE;QAC3GV,WAAW,GAAGC,KAAK,CAACC,IAAI,CAACI,iBAAiB,CAACF,MAAM,EAAE,CAAC;QAEpDL,QAAQ,CAACa,IAAI,CAACZ,WAAW,CAAC;;IAElC,CAAC;IAEDD,QAAQ,CAACa,IAAI,CAACZ,WAAW,CAAC;IAC1BF,UAAU,CAACe,gBAAgB,CAAC,aAAa,EAAER,eAAe,CAAC;IAE3D,OAAO,MAAMP,UAAU,CAACgB,mBAAmB,CAAC,aAAa,EAAET,eAAe,CAAC;EAC/E,CAAC,CAAC;AACV,CAAC","names":["createMidiOutputs","wrapSubscribeFunction","midiAccess","observer","midiOutputs","Array","from","outputs","values","emitMidiOutputs","midiAccessOutputs","length","size","some","id","has","next","addEventListener","removeEventListener"],"sources":["D:\\Nam_4\\Do-an-tot-nghiep\\AIChat\\front-end\\node_modules\\subscribable-things\\src\\factories\\midi-outputs.ts"],"sourcesContent":["import { TMidiOutputsFactory } from '../types';\n\nexport const createMidiOutputs: TMidiOutputsFactory = (wrapSubscribeFunction) => {\n    return (midiAccess) =>\n        wrapSubscribeFunction((observer) => {\n            let midiOutputs = Array.from(midiAccess.outputs.values());\n\n            const emitMidiOutputs = () => {\n                const midiAccessOutputs = midiAccess.outputs;\n\n                if (midiOutputs.length !== midiAccessOutputs.size || midiOutputs.some(({ id }) => !midiAccessOutputs.has(id))) {\n                    midiOutputs = Array.from(midiAccessOutputs.values());\n\n                    observer.next(midiOutputs);\n                }\n            };\n\n            observer.next(midiOutputs);\n            midiAccess.addEventListener('statechange', emitMidiOutputs);\n\n            return () => midiAccess.removeEventListener('statechange', emitMidiOutputs);\n        });\n};\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}